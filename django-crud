DJANGO CRUD PYTHON

Step 1: Create model
c:\wamp64\www\python\PROJECTNAME\myappname\model.py

class RoleModel(models.Model):
	rol_id = models.AutoField(primary_key=True)
	rol_name = models.CharField(max_length=255)
	class Meta:
		db_table = "tbl_roles"

	def __str__(self):
	 return self.rol_name

class UserModel(models.Model):
	usr_id = models.AutoField(primary_key=True)
	#usr_rolidfk = models.IntegerField()
	#user_rolidfk = models.CharField(max_length=6, choices=ROLE_CHOICES, default=2)
	user_rolidfk = models.ForeignKey(RoleModel, on_delete=models.CASCADE)
	usr_name = models.CharField(max_length=255)
	usr_email = models.EmailField() 
	usr_picture = models.FileField()
	usr_aboutme = models.TextField()
	usr_datetime = models.DateTimeField(auto_now_add=True)
	
	class Meta:
		db_table = "tbl_users"

	def __str__(self):
		return str(self.user_rolidfk) + ' - ' + ', '.join([rol.rol_id for rol in self.user_rolidfk.all()])
#		return self.usr_name	

	def __unicode__(self):
		return	self.usr_name
    
    
Step 2: Create forms
c:\wamp64\www\python\PROJECTNAME\myappname\forms.py 

from employee.models import RoleModel #get role model
from employee.models import UserModel # get user model

class RoleForm(forms.ModelForm):
	class Meta:
		model = RoleModel
		fields = "__all__"
			
class UserForm(forms.ModelForm):
	class Meta:
		model = UserModel
		fields = ['usr_name', 'user_rolidfk']
		#fields = "__all__"
    

Step 3: Create views
c:\wamp64\www\python\PROJECTNAME\myappname\views.py

from django.shortcuts import render, redirect  

from employee.forms import RoleForm #get role form
from employee.models import RoleModel #get role model

from employee.forms import UserForm
from employee.models import UserModel


#/////////////////////////// Role methods for crud
def index(request):  
	roles = RoleModel.objects.all()  
	return render(request,"role_index.html",{'roles':roles}) 	

def roleadd(request):  
	if request.method == "POST":  
		form = RoleForm(request.POST)  
		if form.is_valid():  
			try:  
				form.save()  
				return redirect('/index/')  
			except:  
				pass  
	else:  
		form = RoleForm()  
	return render(request,'role_add.html',{'form':form}) 

def roleedit(request, id):  
	roles = RoleModel.objects.get(rol_id=id)  
	return render(request,'role_edit.html', {'roles':roles})  	

def roleupdate(request, id):  
	roles = RoleModel.objects.get(rol_id=id)  
	form = RoleForm(request.POST, instance = roles)  
	if form.is_valid():  
		form.save()  
		return redirect("/index/")  
	return render(request, 'role_edit.html', {'roles': roles}) 	

def roledelete(request, id):  
	roles = RoleModel.objects.get(rol_id=id)  
	roles.delete()  
	return redirect("/index/")	

#SANI: ////////////////////////////// USERS methods for CRUD
#User method for crud
def userlist(request):  
	users = UserModel.objects.all()  
	return render(request,"user_index.html",{'users':users}) 	

def useradd(request):  
	if request.method == "POST":  
		form = UserForm(request.POST)  
		if form.is_valid():  
			try:  
				form.save()  
				return redirect('/users/')  
			except:  
				pass  
	else:  
		form = UserForm() 
		
		
	return render(request,'user_add.html',{'form':form}) 

def useredit(request, id):  
	users = UserModel.objects.get(usr_id=id) 
	roles = RoleModel.objects.all()

	form  = UserForm(request.POST or None, instance=users)
	data  = {"users": users,
			 "roles": roles,
			 "form": form	
	        }
	return render(request,'user_edit.html', data) 

def userupdate(request, id):  
	users = UserModel.objects.get(usr_id=id)  
	form = UserForm(request.POST, instance = users)  
	if form.is_valid():  
		form.save()  
		return redirect("/users/")  
	return render(request, 'user_edit.html', {'users': users}) 	

def userdelete(request, id):  
	users = UserModel.objects.get(usr_id=id)  
	users.delete()  
	return redirect("/users/")
  

Step 4: html codes
# /////////////////////////// Listing ///////////////////////////////
c:\wamp64\www\python\PROJECTNAME\myappname\templates\user_index.html 

    <!DOCTYPE html>  
    <html lang="en">  
    <head>  
        <meta charset="UTF-8">  
        <title>Users Records</title>  
         {% load staticfiles %}  
        <link rel="stylesheet" href="{% static 'css/style.css' %}"/>  
    </head>  
    <body>  
    <table class="table table-striped table-bordered table-sm">  
        <thead class="thead-dark">  
        <tr>  
            <th>ID</th>  
            <th>Name</th>
            <th>Role</th>    
            <th>Actions</th>  
        </tr>  
        </thead>  
        <tbody>  
    {% for user in users %}  
        <tr>  
            <td>{{ user.usr_id }}</td>  
            <td>{{ user.usr_name }}</td>
            <td>{{ user.user_rolidfk }}</td>   
            <td>  
                <a href="/useredit/{{ user.usr_id }}"><span class="glyphicon glyphicon-pencil" >Edit</span></a>  
                <a href="/userdelete/{{ user.usr_id }}">Delete</a>  
            </td>  
        </tr>  
    {% endfor %}  
        </tbody>  
    </table>  
    <br>  
    <br>  
    <center><a href="/useradd/" class="btn btn-primary">Add New Record</a></center>  
    </body>  
    </html>  
 
 # /////////////////////////// ADD PAGE ///////////////////////////////
     <!DOCTYPE html>  
    <html lang="en">  
    <head>  
        <meta charset="UTF-8">  
        <title>Index</title>  
        {% load staticfiles %}  
        <link rel="stylesheet" href="{% static 'css/style.css' %}"/>  
    </head>  
    <body>  
    <form method="POST" class="post-form" action="/useradd/" enctype="">  
            {% csrf_token %} 

{% if form.errors %}
            {% for field in form %}
                {% for error in field.errors %}
                     {{field.label}}: {{ error|escape }}
                {% endfor %}
            {% endfor %}
            {% for error in form.non_field_errors %}
                 {{ error|escape }}
            {% endfor %}
        {% endif %}
        <div class="container">  
    <br>  
        <div class="form-group row">  
        <label class="col-sm-1 col-form-label"></label>  
        <div class="col-sm-4">  
        <h3>Enter Details</h3>  
        </div>  
      </div>  
         
      <div class="form-group row">  
        <label class="col-sm-2 col-form-label">Name:</label>  
        <div class="col-sm-4">  
          {{ form.usr_name }}  
        </div>  
      </div>
      
      <div class="form-group row">  
        <label class="col-sm-2 col-form-label">Role:</label>  
        <div class="col-sm-4">  
          {{ form.user_rolidfk }}
        </div>  
      </div>
        
        
        <div class="form-group row">  
        <label class="col-sm-1 col-form-label"></label>  
        <div class="col-sm-4">  
        <button type="submit" class="btn btn-primary">Submit</button>  
        </div>  
      </div>  
        </div>  
    </form>  
    </body>  
    </html>  
    
  # /////////////////////////// EDIT PAGE ///////////////////////////////  
      <!DOCTYPE html>  
    <html lang="en">  
    <head>  
        <meta charset="UTF-8">  
        <title>Index</title>  
        {% load staticfiles %}  
        <link rel="stylesheet" href="{% static 'css/style.css' %}"/>  
    </head>  
    <body>  
    <form method="POST" class="post-form" action="/userupdate/{{users.usr_id}}">  
            {% csrf_token %} 
{% if form.errors %}
            {% for field in form %}
                {% for error in field.errors %}
                     {{field.label}}: {{ error|escape }}
                {% endfor %}
            {% endfor %}
            {% for error in form.non_field_errors %}
                 {{ error|escape }}
            {% endfor %}
{% endif %}

        <div class="container">  
    <br>  
        <div class="form-group row">  
        <label class="col-sm-1 col-form-label"></label>  
        <div class="col-sm-4">  
        <h3>Update Details</h3>  
        </div>  
      </div>  
<!--
            {% for field in form %}
            <tr>
                <th>{{field.label}}</th>
                <td>{{ field }}</td>
            </tr>
            {% endfor %}
-->
      <div class="form-group row">  
        <label class="col-sm-2 col-form-label">User Name:</label>  
        <div class="col-sm-4">  
            <input type="text" name="usr_name" id="id_usr_name" required maxlength="100" value="{{ users.usr_name }}" />  
        </div>  
      </div> 

      <div class="form-group row">  
        <label class="col-sm-2 col-form-label">Role:</label>  
        <div class="col-sm-4">  
          {{ users.user_rolidfk }} 
          {{ form.user_rolidfk }} 
                 
          <select name="user_rolidfk">
         {% for role in roles %}
             <option
              value="{{ role.rol_id }}"
              {% if users.user_rolidfk is role.rol_name %}
                  selected="selected"
              {% else %}
                sani
              {% endif %}
             >{{ role.rol_name }}</option>
         {% endfor %}
    </select>

        </div>  
      </div> 
        
        
        <div class="form-group row">  
        <label class="col-sm-1 col-form-label"></label>  
        <div class="col-sm-4">  
        <button type="submit" class="btn btn-success">Update</button>  
        </div>  
      </div>  
        </div>  
    </form>  
    </body>  
    </html>  
    
    
    That's all
